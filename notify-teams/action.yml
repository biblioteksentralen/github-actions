name: Notify Teams on failure
description: Notify Teams channel on job failure

inputs:
  title:
    description: "Card title"
    required: true
  text:
    description: "Card text"
    required: true
  webhooks-url:
    description: "Webhooks URL"
    required: true
runs:
  using: "composite"
  steps:
    # Ref: https://github.com/orgs/community/discussions/32169
    - uses: actions/github-script@v6
      id: job-url
      with:
        script: |
          const { data } = await github.rest.actions.listJobsForWorkflowRunAttempt({
            ...context.repo,
            run_id: context.runId,
            attempt_number: process.env.GITHUB_RUN_ATTEMPT,
          });
          const job = data.jobs[0];
          console.log(job)

          const https = require("node:https");

          console.log(inputs)

          const webhookUrl = `${{ inputs['webhooks-url'] }}`
          const title = `${{ inputs.title }}`;
          const text = `${{ inputs.text }}`;
          const logUrl = job?.html_url;

          const data = JSON.stringify({
            "@type": "MessageCard",
            "@context": "https://schema.org/extensions",
            title,
            text,
            potentialAction: [
              {
                "@type": "OpenUri",
                name: "Vis logg",
                targets: [{ os: "default", uri: logUrl }],
              },
            ],
          });

          await new Promise((resolve, reject) => {
            const req = https.request(
              webhookUrl,
              {
                method: "POST",
                headers: {
                  "Content-Type": "application/json; charset=utf-8",
                },
              },
              (res) => {
                res.setEncoding("utf8");
                res.on("data", (data) => {
                  console.log(`Response: ${data}`);
                });
                res.on("end", () => {
                  console.log(`Got ${res.statusCode} response`);
                  if (res.statusCode && res.statusCode >= 200 && res.statusCode < 300)
                    resolve();
                  else reject(new Error(`Failed, got statusCode ${res.statusCode}`));
                });
              }
            );
            req.on("error", (err) => {
              reject(err);
            });
            req.end(data);
          });
